
name: CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the specified branches
  push:
    branches: [ dev-*, prod-* ]
  pull_request:
    branches: [ template-dev, template-prod, dev-iframer, dev-world-map, dev-country-info, dev-capitals, prod-iframer, prod-world-map, prod-country-info, prod-capitals ]

env:
  BRANCH: ${{ github.ref_name }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  prep:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    # Set an env var that holds the name of what team folder we should use in a later job
    steps:
      - if: github.ref_name == 'dev-iframer' || github.ref_name == 'prod-iframer'
        env:
          TEAM_DIR: 'iframer'
      - if: github.ref_name == 'dev-world-map' || github.ref_name == 'prod-world-map'
        env:
          TEAM_DIR: 'world-map'
      - if: github.ref_name == 'dev-country-info' || github.ref_name == 'prod-country-info'
        env:
          TEAM_DIR: 'country-info'
      - if: github.ref_name == 'dev-capitals' || github.ref_name == 'prod-capitals'
        env:
          TEAM_DIR: 'capitals'

  test-unit:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

  build-and-push-dev:
    name: Build and push dev image to Docker Hub
    needs: [ prep, test-unit ]
    # Check if we are on one of the main dev branches
    if: |
      github.ref_type == 'branch' &&
      (
        github.ref_name == 'dev-iframer' ||
        github.ref_name == 'dev-world-map' ||
        github.ref_name == 'dev-country-info' ||
        github.ref_name == 'dev-capitals'
      )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.TEAM_DIR }}
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devops21-metodik2:${{ env.BRANCH }}-latest
